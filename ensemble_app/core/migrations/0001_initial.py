# Generated by Django 4.2.16 on 2025-07-16 10:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ExternalProject',
            fields=[
                ('project_id', models.AutoField(primary_key=True, serialize=False)),
                ('project_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'Projects',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AdobeForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('pdf', models.FileField(upload_to='adobe_forms/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('projectcode', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Group',
                'verbose_name_plural': 'Groups',
            },
        ),
        migrations.CreateModel(
            name='Learner',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('FirstName', models.CharField(default='Unknown', max_length=255)),
                ('Surname', models.CharField(default='Unknown', max_length=255)),
                ('IDNumber', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('Gender', models.CharField(blank=True, default='Unknown', max_length=20, null=True)),
                ('Equity', models.CharField(blank=True, default='Unknown', max_length=50, null=True)),
                ('EmailAddress', models.EmailField(blank=True, max_length=254, null=True)),
                ('UserID', models.IntegerField(blank=True, db_index=True, null=True, unique=True)),
                ('expected_clock_in', models.TimeField(blank=True, null=True)),
                ('expected_clock_out', models.TimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LearnerAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('attempt_number', models.IntegerField(default=1)),
                ('poe_submitted', models.BooleanField(default=False)),
                ('remediation_submitted', models.BooleanField(default=False)),
                ('formative_assessment', models.BooleanField(default=False)),
                ('summative_assessment', models.BooleanField(default=False)),
                ('assessment_date', models.DateField(blank=True, null=True)),
                ('actual_assessment_date', models.DateField(blank=True, null=True)),
                ('actual_assessment_date2', models.DateField(blank=True, null=True)),
                ('actual_assessment_date3', models.DateField(blank=True, null=True)),
                ('date_booked_in', models.DateField(blank=True, null=True)),
                ('date_booked_out', models.DateField(blank=True, null=True)),
                ('date_booked_in2', models.DateField(blank=True, null=True)),
                ('date_booked_out2', models.DateField(blank=True, null=True)),
                ('date_booked_in3', models.DateField(blank=True, null=True)),
                ('date_booked_out3', models.DateField(blank=True, null=True)),
                ('due_date_booked_in', models.DateField(blank=True, null=True)),
                ('due_date_booked_out', models.DateField(blank=True, null=True)),
                ('due_date_booked_in2', models.DateField(blank=True, null=True)),
                ('due_date_booked_out2', models.DateField(blank=True, null=True)),
                ('due_date_booked_in3', models.DateField(blank=True, null=True)),
                ('due_date_booked_out3', models.DateField(blank=True, null=True)),
                ('end_date2', models.DateField(blank=True, null=True)),
                ('end_date3', models.DateField(blank=True, null=True)),
                ('colour', models.CharField(blank=True, max_length=50, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Learner Assessment',
                'verbose_name_plural': 'Learner Assessments',
            },
        ),
        migrations.CreateModel(
            name='LearnerModulePOE',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('poe_file', models.FileField(upload_to='poe_submissions/')),
                ('submission_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('under_review', 'Under Review'), ('competent', 'Competent'), ('not_yet_competent', 'Not Yet Competent')], default='draft', max_length=20)),
                ('review_date', models.DateTimeField(blank=True, null=True)),
                ('feedback', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='LearnerRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.learner')),
            ],
            options={
                'verbose_name': 'Learner Role',
                'verbose_name_plural': 'Learner Roles',
            },
        ),
        migrations.CreateModel(
            name='LIFTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('template_file', models.FileField(upload_to='lif_templates/')),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=300, null=True)),
                ('code', models.IntegerField(blank=True, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remedial_briefing_session_start_date', models.DateField(blank=True, null=True)),
                ('complete_formative_poe_date', models.DateField(blank=True, null=True)),
                ('summative_qa_session_start_date', models.DateField(blank=True, null=True)),
                ('complete_summative_poe_date', models.DateField(blank=True, null=True)),
                ('assessment_date', models.DateField(blank=True, null=True)),
                ('summative_qa_session_end_date', models.DateField(blank=True, null=True)),
                ('remediation_submission_date', models.DateField(blank=True, null=True)),
                ('remediation_assessment_date', models.DateField(blank=True, null=True)),
                ('client_report_date', models.DateField(blank=True, null=True)),
                ('module_briefing_session_start_date', models.DateField(blank=True, null=True)),
                ('module_briefing_session_end_date', models.DateField(blank=True, null=True)),
                ('remedial_briefing_session_end_date', models.DateField(blank=True, null=True)),
                ('assessment_book_in_date', models.DateField(blank=True, null=True)),
                ('assessment_book_out_date', models.DateField(blank=True, null=True)),
                ('results_release_due_date', models.DateField(blank=True, null=True)),
                ('remediation_booked_in_date', models.DateField(blank=True, null=True)),
                ('remediation_booked_out_date', models.DateField(blank=True, null=True)),
                ('remediation_results_release_due_date', models.DateField(blank=True, null=True)),
                ('assessment_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assessment_persons', to='core.learnerrole')),
                ('client_report_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='client_report_persons', to='core.learnerrole')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.group')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.module')),
                ('module_briefing_session_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='module_briefing_session_persons', to='core.learnerrole')),
                ('remedial_briefing_session_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='remedial_briefing_session_persons', to='core.learnerrole')),
                ('remediation_assessment_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='remediation_assessment_persons', to='core.learnerrole')),
                ('summative_qa_session_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='summative_qa_session_persons', to='core.learnerrole')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'Role',
                'verbose_name_plural': 'Roles',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('gl_code', models.CharField(max_length=7)),
                ('saqa_id', models.CharField(max_length=20)),
                ('shorthand', models.CharField(max_length=10, unique=True)),
                ('unit_price', models.FloatField(default=0.0)),
                ('requires_summative_exam', models.BooleanField(default=False, help_text='Any QCTO qualification (service) requiring a summative exam')),
                ('admin_pack_document', models.FileField(blank=True, help_text="Upload a Word document for this service's Admin Pack", null=True, upload_to='service_admin_packs/')),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
            },
        ),
        migrations.CreateModel(
            name='SessionDate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('preferred_training_methodology', models.CharField(max_length=50)),
                ('facilitator', models.ForeignKey(blank=True, limit_choices_to={'role__name': 'Facilitator'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='session_dates', to='core.learnerrole')),
                ('project_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.projectplan')),
            ],
        ),
        migrations.CreateModel(
            name='SETA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'SETA',
                'verbose_name_plural': 'SETAs',
            },
        ),
        migrations.CreateModel(
            name='SLA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sla_reference', models.CharField(max_length=20, unique=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('end_client_name', models.CharField(blank=True, max_length=100)),
                ('num_tranches', models.IntegerField()),
                ('billing_day', models.CharField(max_length=20)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.customer')),
            ],
            options={
                'ordering': ['sla_reference'],
            },
        ),
        migrations.CreateModel(
            name='VATRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('address', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='VenueBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_datetime', models.DateTimeField()),
                ('end_datetime', models.DateTimeField()),
                ('booking_purpose', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('booked', 'Booked'), ('rescheduled', 'Rescheduled'), ('cancelled', 'Cancelled')], default='booked', max_length=20)),
                ('num_learners', models.IntegerField(blank=True, help_text='Number of learners attending', null=True)),
                ('num_learners_lunch', models.IntegerField(blank=True, help_text='Number of learners getting lunch', null=True)),
                ('combined_booking_id', models.CharField(blank=True, help_text='UUID for combined bookings', max_length=36, null=True)),
                ('facilitator', models.ForeignKey(blank=True, limit_choices_to={'role__name': 'Facilitator'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='venue_bookings', to='core.learnerrole')),
                ('session_date', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.sessiondate')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='venue_bookings', to=settings.AUTH_USER_MODEL)),
                ('venue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.venue')),
            ],
        ),
        migrations.CreateModel(
            name='UnitStandard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField()),
                ('unit_standard_type', models.CharField(blank=True, null=True)),
                ('unit_standard_title', models.CharField(blank=True, null=True)),
                ('level', models.IntegerField(blank=True, null=True)),
                ('credits', models.IntegerField(blank=True, null=True)),
                ('communications_cat', models.CharField(blank=True, null=True)),
                ('math_cat', models.CharField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_unit_standards', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_unit_standards', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Unit Standard',
                'verbose_name_plural': 'Unit Standards',
            },
        ),
        migrations.CreateModel(
            name='SLA_Qualifications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('learner_count', models.IntegerField()),
                ('employment_status', models.CharField(blank=True, max_length=20, null=True)),
                ('getting_data', models.BooleanField(default=False)),
                ('getting_laptop', models.BooleanField(default=False)),
                ('lunch_provided', models.BooleanField(default=False)),
                ('venue_location', models.CharField(blank=True, max_length=255, null=True)),
                ('learnership', models.FloatField(default=0.0)),
                ('recruitment', models.FloatField(default=0.0)),
                ('hosting', models.FloatField(default=0.0)),
                ('technology', models.FloatField(default=0.0)),
                ('venue_cost', models.FloatField(default=0.0)),
                ('stipends', models.FloatField(default=0.0)),
                ('consulting', models.FloatField(default=0.0)),
                ('expected_clock_in', models.TimeField(blank=True, null=True)),
                ('expected_clock_out', models.TimeField(blank=True, null=True)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.service')),
                ('sla', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.sla')),
            ],
            options={
                'verbose_name': 'SLA Qualification',
                'verbose_name_plural': 'SLA Qualifications',
            },
        ),
        migrations.CreateModel(
            name='Service_Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.module')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.service')),
            ],
        ),
        migrations.CreateModel(
            name='POEAnnexture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='poe_annextures/')),
                ('poe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='annextures', to='core.learnermodulepoe')),
            ],
        ),
        migrations.CreateModel(
            name='ModulePOETemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template_file', models.FileField(upload_to='poe_templates/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.module')),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ModulePOEAnnexture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('required', models.BooleanField(default=True)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='required_annextures', to='core.modulepoetemplate')),
            ],
        ),
        migrations.CreateModel(
            name='LIF',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('national_id', models.CharField(max_length=255, verbose_name='National ID')),
                ('alternative_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Alternative ID')),
                ('alternative_id_type', models.CharField(blank=True, choices=[('521', 'SAQA Member ID'), ('527', 'Passport Number'), ('529', "Driver's License"), ('531', 'Temporary ID Number'), ('533', 'None'), ('535', 'Unknown'), ('537', 'Student Number'), ('538', 'Work Permit Number'), ('539', 'Employee Number'), ('540', 'Birth Certificate Number'), ('541', 'HSRC Register Number'), ('561', 'ETQA Record Number'), ('565', 'Refugee Number')], max_length=3, null=True, verbose_name='Alternative ID Type')),
                ('equity_code', models.CharField(choices=[('BA', 'Black African'), ('BC', 'Black Coloured'), ('BI', 'Black Indian'), ('Wh', 'White')], max_length=2, verbose_name='Equity Code')),
                ('nationality_code', models.CharField(choices=[('SA', 'South African'), ('SDC', 'SADC except SA'), ('ANG', 'Angola'), ('BOT', 'Botswana'), ('LES', 'Lesotho'), ('MAL', 'Malawi'), ('MAU', 'Mauritius'), ('MOZ', 'Mozambique'), ('NAM', 'Namibia'), ('SEY', 'Seychelles'), ('SWA', 'Swaziland'), ('TAN', 'Tanzania'), ('ZAI', 'Zaire'), ('ZAM', 'Zambia'), ('ZIM', 'Zimbabwe'), ('AIS', 'Asian Countries'), ('AUS', 'Australia Oceania'), ('EUR', 'European Countries'), ('NOR', 'North American Countries'), ('SOU', 'South/Central American'), ('ROA', 'Rest of Africa'), ('OOC', 'Other & Rest of Oceania'), ('U', 'Unspecified'), ('NOT', 'N/A: Institution')], max_length=5, verbose_name='Nationality Code')),
                ('home_language_code', models.CharField(choices=[('Afr', 'Afrikaans'), ('Eng', 'English'), ('Nde', 'isiNdebele'), ('Sep', 'sePedi'), ('Ses', 'seSotho'), ('Set', 'seTswana'), ('Swa', 'siSwati'), ('Tsh', 'tshiVenda'), ('Xho', 'isiXhosa'), ('Xit', 'xiTsonga'), ('Zul', 'isiZulu'), ('SASL', 'South African Sign Language'), ('Oth', 'Other'), ('U', 'Unknown')], max_length=5, verbose_name='Home Language Code')),
                ('gender_code', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female')], max_length=1, null=True, verbose_name='Gender')),
                ('citizen_resident_status_code', models.CharField(blank=True, choices=[('SA', 'South Africa'), ('D', 'Dual (SA plus other)'), ('O', 'Other'), ('PR', 'Permanent Resident'), ('U', 'Unknown')], max_length=2, null=True, verbose_name='Citizen Resident Status Code')),
                ('province_code', models.CharField(blank=True, choices=[('1', 'Western Cape'), ('2', 'Eastern Cape'), ('3', 'Northern Cape'), ('4', 'Free State'), ('5', 'KwaZulu/Natal'), ('6', 'North West'), ('7', 'Gauteng/JHB'), ('7b', 'Gauteng/PTA'), ('8', 'Mpumalanga'), ('9', 'Limpopo'), ('X', 'Outside South Africa'), ('N', 'South African National')], max_length=2, null=True, verbose_name='Province Code')),
                ('disability_status_code', models.CharField(blank=True, choices=[('01', 'Sight (Even with Glasses)'), ('02', 'Hearing (Even with Hearing Aid)'), ('03', 'Communication (Talk/Listen)'), ('04', 'Physical (Move/Stand, etc.)'), ('05', 'Intellectual (Learn etc.)'), ('06', 'Emotional (Behaviour/Psychological)'), ('07', 'Multiple'), ('09', 'Disabled but unspecified'), ('N', 'None')], max_length=2, null=True, verbose_name='Disability Status Code')),
                ('socio_economic_status_code', models.CharField(blank=True, choices=[('01', 'Employed'), ('02', 'Unemployed, seeking work'), ('03', 'Not working, not looking'), ('04', 'Home-maker, not working'), ('06', 'Scholar/Student, not working'), ('07', 'Pensioner/Retired, not working'), ('08', 'Not working, disabled'), ('09', 'Not working, no wish to work'), ('10', 'Not working, N.E.C.'), ('97', 'N/A: Aged <15'), ('98', 'N/A: Institution'), ('U', 'Unspecified')], max_length=2, null=True, verbose_name='Socio-economic Status Code')),
                ('learner_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Learner Title')),
                ('learner_birth_date', models.DateField(verbose_name='Learner Birth Date')),
                ('learner_first_name', models.CharField(max_length=255, verbose_name='Learner First Name')),
                ('learner_middle_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Learner Middle Name')),
                ('learner_last_name', models.CharField(max_length=255, verbose_name='Learner Last Name')),
                ('learner_previous_last_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Learner Previous Last Name')),
                ('learner_current_occupation', models.CharField(blank=True, max_length=255, null=True, verbose_name='Learner Current Occupation')),
                ('years_in_occupation', models.PositiveIntegerField(blank=True, null=True, verbose_name='Years in Occupation')),
                ('employer', models.CharField(blank=True, max_length=255, null=True, verbose_name='Employer')),
                ('highest_secondary_education', models.CharField(blank=True, choices=[('Grade 8', 'Grade 8'), ('Grade 9', 'Grade 9'), ('Grade 10', 'Grade 10'), ('Grade 11', 'Grade 11'), ('Grade 12', 'Grade 12')], max_length=20, null=True, verbose_name='Highest Secondary Education')),
                ('secondary_school_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='School Name')),
                ('secondary_year_completed', models.PositiveIntegerField(blank=True, null=True, verbose_name='Year Completed (Secondary)')),
                ('percentage_maths', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Percentage - Maths')),
                ('percentage_first_language', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Percentage - 1st Language')),
                ('percentage_second_language', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Percentage - 2nd Language')),
                ('highest_tertiary_education', models.CharField(blank=True, choices=[('National Certificate', 'National Certificate'), ('National Diploma', 'National Diploma'), ('National First Degree', 'National First Degree'), ('Post-doctoral Degree', 'Post-doctoral Degree'), ('Doctoral Degree', 'Doctoral Degree'), ('Professional Qualification', 'Professional Qualification'), ('Honours Degree', 'Honours Degree'), ('National Higher Diploma', 'National Higher Diploma'), ('National Masters Diploma', 'National Masters Diploma'), ('National Higher', 'National Higher'), ('Further Diploma', 'Further Diploma'), ('Post Graduate', 'Post Graduate'), ('Senior Certificate', 'Senior Certificate'), ('Qual at Nat Sen Cert', 'Qual at Nat Sen Cert'), ('Apprenticeship', 'Apprenticeship'), ('Post Grad B Degree', 'Post Grad B Degree'), ('Post Diploma Diploma', 'Post Diploma Diploma'), ('Post-basic Diploma', 'Post-basic Diploma')], max_length=255, null=True, verbose_name='Highest Tertiary Education')),
                ('tertiary_school_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='School Name (Tertiary)')),
                ('tertiary_year_completed', models.PositiveIntegerField(blank=True, null=True, verbose_name='Year Completed (Tertiary)')),
                ('address_line1', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address Line 1')),
                ('address_line2', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address Line 2')),
                ('city', models.CharField(blank=True, max_length=255, null=True, verbose_name='City')),
                ('state_province', models.CharField(blank=True, max_length=255, null=True, verbose_name='State / Province')),
                ('postal_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Postal / Zip Code')),
                ('phone_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Learner Phone Number')),
                ('alt_contact_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Alternative Contact Number')),
                ('email_address', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Learner Email Address')),
                ('provider_etqa_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Provider ETQA ID')),
                ('provider_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Provider Code')),
                ('programme_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Learning Programme / Course / Qualification Title')),
                ('qualification_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Qualification Code')),
                ('nqf_level', models.CharField(blank=True, max_length=255, null=True, verbose_name='NQF Level')),
                ('sponsor', models.CharField(blank=True, max_length=255, null=True, verbose_name='Sponsor')),
                ('duration_start_date', models.DateField(blank=True, null=True, verbose_name='Duration - Start Date')),
                ('duration_end_date', models.DateField(blank=True, null=True, verbose_name='Duration - End Date')),
                ('consent_to_process', models.BooleanField(default=False, verbose_name='I hereby consent to The Learning Organisation collecting, storing and processing my information for the purpose of registering me with the relevant SETA')),
                ('learner', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lif_form', to='core.learner')),
            ],
        ),
        migrations.AddField(
            model_name='learnerrole',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.role'),
        ),
        migrations.CreateModel(
            name='LearnerQualification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('active', 'Active'), ('removed', 'Removed'), ('completed', 'Completed'), ('dropped', 'Dropped Out'), ('abducted', 'Abducted by Aliens')], default='active', max_length=20)),
                ('exit_reason', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expected_clock_in', models.TimeField(blank=True, null=True)),
                ('expected_clock_out', models.TimeField(blank=True, null=True)),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.learner')),
                ('sla_qualification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.sla_qualifications')),
            ],
            options={
                'verbose_name': 'Learner Qualification',
                'verbose_name_plural': 'Learner Qualifications',
                'unique_together': {('learner', 'sla_qualification')},
            },
        ),
        migrations.AddField(
            model_name='learnermodulepoe',
            name='facilitator',
            field=models.ForeignKey(blank=True, limit_choices_to={'role__name': 'Facilitator'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_poes', to='core.learnerrole'),
        ),
        migrations.AddField(
            model_name='learnermodulepoe',
            name='learner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='poes', to='core.learner'),
        ),
        migrations.AddField(
            model_name='learnermodulepoe',
            name='learner_assessment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='poes', to='core.learnerassessment'),
        ),
        migrations.AddField(
            model_name='learnermodulepoe',
            name='learner_qualification',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.learnerqualification'),
        ),
        migrations.AddField(
            model_name='learnermodulepoe',
            name='module',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.module'),
        ),
        migrations.AddField(
            model_name='learnerassessment',
            name='assessor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primary_assessments', to='core.learnerrole'),
        ),
        migrations.AddField(
            model_name='learnerassessment',
            name='assessor2',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='secondary_assessments', to='core.learnerrole'),
        ),
        migrations.AddField(
            model_name='learnerassessment',
            name='assessor3',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tertiary_assessments', to='core.learnerrole'),
        ),
        migrations.AddField(
            model_name='learnerassessment',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_assessments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='learnerassessment',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to='core.group'),
        ),
        migrations.AddField(
            model_name='learnerassessment',
            name='learner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to='core.learner'),
        ),
        migrations.AddField(
            model_name='learnerassessment',
            name='modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_assessments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='learnerassessment',
            name='module',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to='core.module'),
        ),
        migrations.AddField(
            model_name='learnerassessment',
            name='project_plan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to='core.projectplan'),
        ),
        migrations.AddField(
            model_name='learner',
            name='active_learnership',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='current_learners', to='core.learnerqualification'),
        ),
        migrations.AddField(
            model_name='learner',
            name='user',
            field=models.OneToOneField(blank=True, help_text='Link to Django User; set after migration', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='learner_profile', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='group',
            name='etqa_lead',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='etqa_lead_groups', to='core.learnerrole'),
        ),
        migrations.AddField(
            model_name='group',
            name='project_lead',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='project_lead_groups', to='core.learnerrole'),
        ),
        migrations.AddField(
            model_name='group',
            name='service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='core.service'),
        ),
        migrations.AddField(
            model_name='group',
            name='seta',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='groups', to='core.seta'),
        ),
        migrations.AddField(
            model_name='group',
            name='sla_qualifications',
            field=models.ManyToManyField(blank=True, related_name='groups', to='core.sla_qualifications'),
        ),
        migrations.CreateModel(
            name='BillingHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_date', models.DateField(blank=True, null=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('invoice_type', models.CharField(default='', max_length=20)),
                ('invoice_number', models.CharField(blank=True, max_length=20, null=True)),
                ('payment_date', models.DateField(blank=True, null=True)),
                ('amount', models.FloatField(default=0.0)),
                ('billed', models.BooleanField(default=False)),
                ('sla', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.sla')),
            ],
            options={
                'verbose_name': 'Billing History',
                'verbose_name_plural': 'Billing History',
            },
        ),
        migrations.CreateModel(
            name='AdobeFormAnnexture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('required', models.BooleanField(default=True)),
                ('order', models.IntegerField(default=0)),
                ('adobe_form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='annextures', to='core.adobeform')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='WeeklySchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('monday', 'Monday'), ('tuesday', 'Tuesday'), ('wednesday', 'Wednesday'), ('thursday', 'Thursday'), ('friday', 'Friday'), ('saturday', 'Saturday'), ('sunday', 'Sunday')], max_length=9)),
                ('clock_in', models.TimeField(blank=True, null=True)),
                ('clock_out', models.TimeField(blank=True, null=True)),
                ('learner_qualification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weekly_schedules', to='core.learnerqualification')),
            ],
            options={
                'verbose_name': 'Weekly Schedule',
                'verbose_name_plural': 'Weekly Schedules',
                'unique_together': {('learner_qualification', 'day')},
            },
        ),
        migrations.CreateModel(
            name='RolePermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url_name', models.CharField(max_length=100)),
                ('has_access', models.BooleanField(default=False)),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.role')),
            ],
            options={
                'unique_together': {('role', 'url_name')},
            },
        ),
        migrations.CreateModel(
            name='ModuleUnitStandard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unit_standards', to='core.module')),
                ('unit_standard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='core.unitstandard')),
            ],
            options={
                'verbose_name': 'Module Unit Standard',
                'verbose_name_plural': 'Module Unit Standards',
                'unique_together': {('module', 'unit_standard')},
            },
        ),
        migrations.CreateModel(
            name='LIFTemplateFieldMap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('placeholder', models.CharField(help_text='e.g. {{learner_surname}} in the Word template', max_length=255)),
                ('lif_field', models.CharField(help_text='e.g. learner_last_name (LIF model field)', max_length=255)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='field_mappings', to='core.liftemplate')),
            ],
            options={
                'unique_together': {('template', 'placeholder')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='learnerrole',
            unique_together={('learner', 'role')},
        ),
        migrations.AlterUniqueTogether(
            name='learnermodulepoe',
            unique_together={('learner', 'learner_qualification', 'module')},
        ),
        migrations.CreateModel(
            name='Fingerprint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(db_index=True)),
                ('date', models.DateField(db_index=True)),
                ('time', models.TimeField()),
                ('is_clock_in', models.BooleanField(default=True)),
                ('learner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fingerprints', to='core.learner')),
            ],
            options={
                'verbose_name': 'Fingerprint',
                'verbose_name_plural': 'Fingerprints',
                'ordering': ['date', 'time'],
                'indexes': [models.Index(fields=['user_id', 'date', 'time'], name='core_finger_user_id_92db56_idx'), models.Index(fields=['date', 'user_id'], name='core_finger_date_2f2482_idx')],
                'unique_together': {('user_id', 'date', 'time')},
            },
        ),
        migrations.CreateModel(
            name='BillingHistoryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(default=0.0, help_text='Amount billed for this specific qualification')),
                ('billing_history', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='core.billinghistory')),
                ('sla_qualification', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.sla_qualifications')),
            ],
            options={
                'verbose_name': 'Billing History Item',
                'verbose_name_plural': 'Billing History Items',
                'ordering': ['sla_qualification'],
                'unique_together': {('billing_history', 'sla_qualification')},
            },
        ),
        migrations.CreateModel(
            name='AssessmentUnitStandard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_code', models.CharField(blank=True, max_length=20, null=True)),
                ('status_code_abbreviation', models.CharField(blank=True, max_length=10, null=True)),
                ('status_code2', models.CharField(blank=True, max_length=20, null=True)),
                ('status_code_abbreviation2', models.CharField(blank=True, max_length=10, null=True)),
                ('status_code3', models.CharField(blank=True, max_length=20, null=True)),
                ('status_code_abbreviation3', models.CharField(blank=True, max_length=10, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('comments2', models.TextField(blank=True, null=True)),
                ('comments3', models.TextField(blank=True, null=True)),
                ('colour', models.CharField(blank=True, max_length=50, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_assessment_unit_standards', to=settings.AUTH_USER_MODEL)),
                ('learner_assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unit_standard_results', to='core.learnerassessment')),
                ('unit_standard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessment_results', to='core.unitstandard')),
                ('unit_standard2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assessment_results2', to='core.unitstandard')),
                ('unit_standard3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assessment_results3', to='core.unitstandard')),
            ],
            options={
                'verbose_name': 'Assessment Unit Standard',
                'verbose_name_plural': 'Assessment Unit Standards',
                'unique_together': {('learner_assessment', 'unit_standard')},
            },
        ),
    ]
